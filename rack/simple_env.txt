A typical 'env' that get's passed to a Rack app:
This was generated by the simple_env.rb Rack app and hitting with a Chrome 
using http://localhost:8111/foo/bar?one=tthu&two=false

Note: we had some cookies already, believe they where set by logging into ourstage.com

********** Environment:**********
GATEWAY_INTERFACE: CGI/1.1
PATH_INFO: /favicon.ico
QUERY_STRING: 
REMOTE_ADDR: ::1
REMOTE_HOST: localhost
REQUEST_METHOD: GET
REQUEST_URI: http://localhost:8111/favicon.ico
SCRIPT_NAME: 
SERVER_NAME: localhost
SERVER_PORT: 8111
SERVER_PROTOCOL: HTTP/1.1
SERVER_SOFTWARE: WEBrick/1.3.1 (Ruby/1.9.2/2011-07-09)
HTTP_HOST: localhost:8111
HTTP_CONNECTION: keep-alive
HTTP_ACCEPT: */*
HTTP_USER_AGENT: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.163 Safari/535.19
HTTP_ACCEPT_ENCODING: gzip,deflate,sdch
HTTP_ACCEPT_LANGUAGE: en-US,en;q=0.8
HTTP_ACCEPT_CHARSET: ISO-8859-1,utf-8;q=0.7,*;q=0.3
HTTP_COOKIE: last_user_id=6koBCZIwC99%2BBO9drDP8VQ7%3D%3D%0A; user_id=6koBCZIwC99%2BBO9drDP8VQ7%3D%3D%0A; playerMinimized=true; _ourstage_session=BAh7DEkiD3Nlc3Npb25faWQGOgZFRkkiJTZjN2FjZmU0NTZhMzRmZGNiMWM0YTNkN2I2MmU3ZWU4BjsAVEkiDHVzZXJfaWQGOwBGaQNPfktJIhBfY3NyZl90b2tlbgY7AEZJIjF2U0t6SmUrSzgrRlVsTUtRcGNScE82eVlJUG9ZWktmL0RUNXdmK21uYjMwPQY7AEZJIhVjdXJyZW50X3Byb3RvY29sBjsARkkiCWh0dHAGOwBGSSIOc2hvd25fYWRzBjsARlsASSIRY3VycmVudF9wYWdlBjsARkkiQGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9tZWRpYV9pdGVtcy9BTldISVdLWlpZR0EtbG92ZS11LWNyYXp5BjsARkkiDmxhc3RfcGFnZQY7AEZJIkRodHRwOi8vbG9jYWxob3N0OjMwMDAvc2VhcmNoP3V0Zjg9JUUyJTlDJTkzJnNlYXJjaD1Mb3ZlK1UrQ3JhenkGOwBG--ce754f0fbda6a64aad48c4e42d298803f96f39f2
rack.version: [1, 1]
rack.input: #<StringIO:0x007fe701938ab0>
rack.errors: #<IO:0x007fe70186fc78>
rack.multithread: true
rack.multiprocess: false
rack.run_once: false
rack.url_scheme: http
HTTP_VERSION: HTTP/1.1
REQUEST_PATH: /favicon.ico
localhost - - [20/Apr/2012:03:04:37 EDT] "GET /favicon.ico HTTP/1.1" 200 279
- -> /favicon.ico




Rack::Handler.constants
Rack::Handler.constants
 => [:CGI, :FastCGI, :Mongrel, :EventedMongrel, :SwiftipliedMongrel, :WEBrick, :LSWS, :SCGI, :Thin] 
1.9.2p290 :011 > 


# to run on port 1234
Rack::Handler::WEBrick.run my_app, :Port => 1234

# run the rackup, config.ru, on port 8111
rackup 
thin --rackup config.ru start -p 8111


# go to the RackPart2 dir for the second video

Rack::Builder.new do 

end


use Rack::ShowExceptions
use MyMiddleware

#get xlated into 
Rack::Handler::Thin.run(Rack::ShowExceptions.new(MyMiddleware.new(@app)))


# good overview of Rack, http://pune-rails-meetup-rack.heroku.com/

# see http://m.onkey.org/ruby-on-rack-2-the-builder
# a Rackup is a ruby file where a self is a Rack::Builder instance. 
# see rackup_like.rb and config.ru in the RackPart3 dir. 

require 'rubygems'
require 'rack'
require './my_middleware' # define elsewhere

app = Rack::Builder.new do
  use Rack::ShowExceptions # request hit's first
  use Rack::Reloader       # second
  use MyMiddleware,:header => "HEADER", :footer => "FOoTER"  # third
  dummy_app = lambda{ |env| [200, { "Content-Type" => 'text/html'}, ["Some
  stuff "] ] }  # last
  run dummy_app

end

Rack::Handler::Thin.run app, :Port => 8111
